// Mocks generated by Mockito 5.4.6 from annotations
// in giphy_gifs_core/test/data/repositories/gif_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:giphy_gifs_core/src/data/datasources/giphy_api_client.dart'
    as _i3;
import 'package:giphy_gifs_core/src/data/models/gif_model.dart' as _i6;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GiphyApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGiphyApiClient extends _i1.Mock implements _i3.GiphyApiClient {
  MockGiphyApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey =>
      (super.noSuchMethod(
            Invocation.getter(#apiKey),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#apiKey),
            ),
          )
          as String);

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i5.Future<List<_i6.GifModel>> getTrendingGifs({
    int? offset = 0,
    int? limit = 25,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTrendingGifs, [], {
              #offset: offset,
              #limit: limit,
            }),
            returnValue: _i5.Future<List<_i6.GifModel>>.value(<_i6.GifModel>[]),
          )
          as _i5.Future<List<_i6.GifModel>>);

  @override
  _i5.Future<List<_i6.GifModel>> searchGifs(
    String? query, {
    int? offset = 0,
    int? limit = 25,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchGifs,
              [query],
              {#offset: offset, #limit: limit},
            ),
            returnValue: _i5.Future<List<_i6.GifModel>>.value(<_i6.GifModel>[]),
          )
          as _i5.Future<List<_i6.GifModel>>);
}
