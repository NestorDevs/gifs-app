// Mocks generated by Mockito 5.4.6 from annotations
// in giphy_gifs_core/test/domain/usecases/get_trending_gifs_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:giphy_gifs_core/src/domain/entities/gif.dart' as _i4;
import 'package:giphy_gifs_core/src/domain/repositories/gif_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GifRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGifRepository extends _i1.Mock implements _i2.GifRepository {
  MockGifRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.GIF>> getTrendingGifs({
    int? offset = 0,
    int? limit = 25,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTrendingGifs, [], {
              #offset: offset,
              #limit: limit,
            }),
            returnValue: _i3.Future<List<_i4.GIF>>.value(<_i4.GIF>[]),
          )
          as _i3.Future<List<_i4.GIF>>);

  @override
  _i3.Future<List<_i4.GIF>> searchGifs(
    String? query, {
    int? offset = 0,
    int? limit = 25,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchGifs,
              [query],
              {#offset: offset, #limit: limit},
            ),
            returnValue: _i3.Future<List<_i4.GIF>>.value(<_i4.GIF>[]),
          )
          as _i3.Future<List<_i4.GIF>>);
}
